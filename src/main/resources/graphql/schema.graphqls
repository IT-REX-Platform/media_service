# schema file of the microservice

# defines data types, queries and mutations
# this can be done in a separate files as long as they are in this folder and
# end with .graphqls

type MediaRecord {
  # ID of the media record
  id: UUID!
  # Name of the media record
  name: String!
  # Type of the media record
  type: MediaType!
  # IDs of the MediaContents this media record is associated with
  contentIds: [UUID!]!
}

input CreateMediaRecordInput {
  # Name of the media record. Cannot be blank, maximum length 255 characters.
  name: String! @NotBlank @Size(max: 255)
  # Type of the media record.
  type: MediaType!
}

input UpdateMediaRecordInput {
  # ID of the media record which should be updated
  id: UUID!
  # New name of the media record. Cannot be blank, maximum length 255 characters.
  name: String! @NotBlank @Size(max: 255)
  # New type of the media record.
  type: MediaType!
}

type DownloadUrl {
  url: String
}

type UploadUrl {
  url: String
}

input CreateBucketInput {
  bucketId: String!
}

input CreateUrlInput {
  id: UUID!
}

enum MediaType {
  VIDEO
  AUDIO
  IMAGE
  PRESENTATION
  DOCUMENT
  URL
}

type Query {
  mediaRecordsById(ids: [UUID!]!): [MediaRecord!]!
  mediaRecords: [MediaRecord!]!
  mediaRecordsByContentIds(contentIds: [UUID!]!): [[UUID!]!]!
}

type Mutation {
  createMediaRecord(input: CreateMediaRecordInput!): MediaRecord!
  updateMediaRecord(input: UpdateMediaRecordInput!): MediaRecord!
  deleteMediaRecord(id: UUID!): UUID!
  createStorageUploadUrl(input: CreateUrlInput): UploadUrl
  createStorageDownloadUrl(input: CreateUrlInput): DownloadUrl
  createStorageBucket(input: CreateBucketInput): Boolean
}

