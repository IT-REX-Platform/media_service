# schema file of the microservice

# defines data types, queries and mutations
# this can be done in a separate files as long as they are in this folder and
# end with .graphqls

interface Content {
  id: UUID!
  name: String!
  rewardPoints: Int!
  workedOn: Boolean!
}

type MediaContent implements Content {
  id: UUID!
  name: String!
  rewardPoints: Int!
  workedOn: Boolean!

  media: MediaRecord!
}

type MediaRecord {
  id: UUID!
  name: String!
  type: MediaType!
}

input CreateMediaRecordInput {
  name: String! @NotBlank @Size(max: 255)
  type: MediaType!
}

input UpdateMediaRecordInput {
  id: UUID!
  name: String! @NotBlank @Size(max: 255)
  type: MediaType!
}

type Storage_DownloadUrl {
  url: String
}

type Storage_UploadUrl {
  url: String
}

input InputStorage_CreateBucket {
  bucketId: String!
}

input InputStorage_CreateUrl {
  bucketId: String!
  fileName: String!
}

enum MediaType {
  VIDEO
  AUDIO
  IMAGE
  PRESENTATION
  DOCUMENT
  URL
}

type Query {
  mediaRecordsById(ids: [UUID!]!): [MediaRecord!]!
  mediaRecords: [MediaRecord!]!
}

type Mutation {
  createMediaRecord(input: CreateMediaRecordInput!): MediaRecord!
  updateMediaRecord(input: UpdateMediaRecordInput!): MediaRecord!
  deleteMediaRecord(id: UUID!): UUID!
  Storage_createUploadUrl(input: InputStorage_CreateUrl): Storage_UploadUrl
  Storage_createDownloadUrl(input: InputStorage_CreateUrl): Storage_DownloadUrl
  Storage_createBucket(input: InputStorage_CreateBucket): Boolean
}

