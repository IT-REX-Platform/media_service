type Query {
    """
    Returns the media records with the given IDs. Throws an error if a MediaRecord corresponding to a given ID
    cannot be found.
    ðŸ”’ If the mediaRecord is associated with coursed the user must be a member of at least one of the courses.
    """
    mediaRecordsByIds(ids: [UUID!]!): [MediaRecord!]!
    """
    Like mediaRecordsByIds() returns the media records with the given IDs, but instead of throwing an error if an ID
    cannot be found, it instead returns NULL for that media record.
    ðŸ”’ If the mediaRecord is associated with coursed the user must be a member of at least one of the courses.
    """
    findMediaRecordsByIds(ids: [UUID!]!): [MediaRecord]!
    """
    Returns all media records of the system.
    ðŸ”’ The user must be a super-user, otherwise an exception is thrown.
    """
    mediaRecords: [MediaRecord!]! @deprecated(reason: "In production there should probably be no way to get all media records of the system.")
    """
    Returns all media records which the current user created.
    ðŸ”’ If the mediaRecord is associated with coursed the user must be a member of at least one of the courses.
    """
    userMediaRecords: [MediaRecord!]!
    """
    Returns the media records associated the given content IDs as a list of lists where each sublist contains
    the media records associated with the content ID at the same index in the input list
    ðŸ”’ If the mediaRecord is associated with coursed the user must be a member of at least one of the courses.
    """
    mediaRecordsByContentIds(contentIds: [UUID!]!): [[MediaRecord!]!]!

    """
    Returns all media records for the given CourseIds
    ðŸ”’ If the mediaRecord is associated with coursed the user must be a member of at least one of the courses.
    """
    mediaRecordsForCourses(courseIds: [UUID!]!): [[MediaRecord!]!]!
}